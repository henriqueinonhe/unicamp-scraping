{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/MyDatabase.ts","webpack:///./src/index.ts","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"mongodb\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import mongodb from \"mongodb\";\r\nimport { ProfessorProfile } from \"./Models/ProfessorProfile\";\r\nimport { InstituteEntry } from \"./Models/InstituteEntry\";\r\n\r\nexport class MyDatabase\r\n{\r\n  public static mongoClient : mongodb.MongoClient;\r\n  public static database : mongodb.Db;\r\n\r\n  public static async initialize() : Promise<void>\r\n  {\r\n    //Database Connect\r\n    const mongoURI = process.env.DB_URI!;\r\n    MyDatabase.mongoClient = new mongodb.MongoClient(mongoURI, { useUnifiedTopology: true });\r\n    await MyDatabase.mongoClient.connect();\r\n\r\n    MyDatabase.database = MyDatabase.mongoClient.db();\r\n  }\r\n\r\n  public static async cleanup() : Promise<void>\r\n  {\r\n    //Close Database\r\n    MyDatabase.mongoClient.close();\r\n  }\r\n\r\n  public static async storeProfessorsProfiles(profiles : Array<ProfessorProfile>) : Promise<void>\r\n  {\r\n    const collection = MyDatabase.database.collection(\"professors\");\r\n    await collection.deleteMany({});\r\n    await collection.insertMany(profiles);\r\n  }\r\n\r\n  public static async storeCrudeData(entries : Array<InstituteEntry>) : Promise<void>\r\n  {\r\n    const collection = MyDatabase.database.collection(\"crudeData\");\r\n    await collection.deleteMany({});\r\n    await collection.insertMany(entries);\r\n  }\r\n\r\n  public static async fetchProfessorsInitialData() : Promise<Array<ProfessorProfile>>\r\n  {\r\n    const collection = MyDatabase.database.collection(\"professors\");\r\n    const data = await collection.find({}).project({_id: 0, name: 1, institutes: 1}).toArray();\r\n\r\n    return data as Array<ProfessorProfile>;\r\n  }\r\n\r\n  public static async fetchProfessorData(name : string) : Promise<ProfessorProfile>\r\n  {\r\n    const collection = MyDatabase.database.collection(\"professors\");\r\n    const data = await collection.findOne({name});\r\n    return data;\r\n  }\r\n}","import dotenv from \"dotenv\";\r\nimport express from \"express\";\r\nimport { MyDatabase } from \"./MyDatabase\";\r\n\r\n(async () =>\r\n{\r\n  //Initalization\r\n  dotenv.config();\r\n  await MyDatabase.initialize();\r\n\r\n  const app = express();\r\n\r\n  app.use(express.json());\r\n  app.use(express.static(\"public\"));\r\n  \r\n  app.get(\"/professors\", async (req, res) =>\r\n  {\r\n    res.send(await MyDatabase.fetchProfessorsInitialData());\r\n  });\r\n  \r\n  app.get(\"/professors/:name\", async (req, res) =>\r\n  {\r\n    const { name } = req.params;\r\n    res.send(await MyDatabase.fetchProfessorData(name));\r\n  });\r\n  \r\n  app.listen(process.env.PORT || 8080, () =>\r\n  {\r\n    console.log(\"Server up!\");\r\n  });\r\n  \r\n})();\r\n\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"mongodb\");"],"sourceRoot":""}